{
  "openapi": "3.1.0",
  "info": {
    "title": "Be Ecommerce",
    "version": "1.0",
    "description": "Be API Ecommerce Flattenbot"
  },
  "servers": [
    {"url": "http://localhost:3000/"}
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "User register",
        "description": "Create user account",
        "tags": ["Users", "Auth"],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                      "id": "01HE34AHXKKDXJHQBRHN5P3J9V",
                      "name": "johndoe1",
                      "email": "johndoe1@gmail.com",
                      "createdAt": "2023-10-31T15:06:09.294Z"
                  }
              }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": {
                    "email": "email field is required",
                    "name": "name cannot less than 5 characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User Login",
        "description": "Retrieve data token user",
        "tags": ["Users", "Auth"],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "string",
                "password": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "login success",
                  "data": {
                    "id": "user id",
                    "name": "user name",
                    "token": "some random token"
                  }
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "Email must be verified first!"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "cannot retrieve data user"
                }
              }
            }
          },
          "500": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "data and hash arguments required"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "put": {
        "summary": "Email Verification",
        "description": "Verify email user",
        "tags": ["Auth", "Users"],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key value that identified user id in uuid",
            "required": true,
            "value": "42ffc578-193b-4328-b915-18cfeb050dc"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success verif email"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "Invalid key or key already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Details User",
        "description": "Get details user, identified by login token",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get data user",
                  "data": {
                    "id": "some random id",
                    "email": "example@mail.com",
                    "name": "my name",
                    "email_verified": "2023-10-13T05:11:17.034Z",
                    "createdAt": "2023-10-13T05:10:31.633Z",
                    "updatedAt": "2023-10-14T04:51:23.051Z",
                    "deletedAt": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "User Update",
        "description": "Update current data user, identified by login token",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "email user",
                "name": "name user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success update record data",
                  "data": {
                    "id": "01HCRQKDH9WVZY64GKT9QS6B2A",
                    "name": "bastues",
                    "email": "batues@gmail.com",
                    "updatedAt": "2023-10-31T15:22:03.563Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": {
                    "name": "\"name\" is required"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "post": {
        "summary": "Create Document",
        "description": "Create document of user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Documents"],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "fullname": "Jhon Doe",
                "nik": 3201111111111111,
                "photos": "secret.jpeg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "user_id": "user id",
                    "fullname": "Jhon Doe",
                    "nik": 3201111111111111,
                    "photos": "documents/jhondoe321.jpeg",
                    "createdAt": "2023-11-23T11:49:51.943Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "User document already exist"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/address": {
      "post": {
        "summary": "Create Address",
        "description": "Create user address",
        "tags": ["Address"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "Jhon Doe",
                "phone": "081333333333",
                "street": "My home",
                "zip_code": "16830",
                "village": "Menan",
                "district": "Jonggol",
                "regency": "Kabupaten Bogor",
                "province": "Jawa Barat",
                "latitude": "-10.00",
                "longitude": "-250.200"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "name": "Jhon Doe",
                    "phone": "081333333333",
                    "street": "My home",
                    "zip_code": "16830",
                    "village": "Menan",
                    "district": "Jonggol",
                    "regency": "Kabupaten Bogor",
                    "province": "Jawa Barat",
                    "latitude": "-10.00",
                    "longitude": "-250.200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "This address seems already exist"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/admins/register": {
      "post": {
        "summary": "Create admin account",
        "description": "Create new admin or cs account",
        "tags": ["Admins"],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "admin@mail.com",
                "name": "yourname",
                "password": "password",
                "level": "cs, admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "id": 19,
                    "name": "bastus",
                    "email": "bastus@gmail.com",
                    "level": "admin",
                    "createdAt": "2023-10-31T14:44:07.052Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": {
                    "email": "\"email\" is required",
                    "name": "\"name\" is required",
                    "password": "\"password\" is required",
                    "level": "\"level\" is required"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "You don't have any permission to use this level"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/admins/login": {
      "post": {
        "summary": "Login admin",
        "description": "Login as cs, admin, superadmin",
        "tags": ["Admins"],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "admin",
                "password": "yourpassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "login message",
                  "data": {
                    "id": 1,
                    "name": "admin",
                    "level": "admin",
                    "token": "some random token"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "status": "not found",
                  "message": "cannot retrieved data admin"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/stores": {
      "post": {
        "summary": "Create store",
        "description": "Create store for use who wants to sell their products",
        "tags": ["Stores"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "username": "Username for their store, required for slug or etc",
                "name": "Display name for their store",
                "file": "optional, can be skip later",
                "description": "optional, can be skip later"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success created data store",
                  "data": {
                    "user": {
                      "name": "bastues",
                      "email": "batues@gmail.com"
                    },
                    "store": {
                      "id": 47,
                      "username": "store12",
                      "name": "My first store",
                      "photos": null,
                      "description": null,
                      "createdAt": "2023-10-31T23:24:59.079Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "this already has store exist"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update store",
        "description": "Update their own store",
        "tags": ["Stores"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success update record data",
                  "data": {
                    "user": {
                      "name": "bastues",
                      "email": "batues@gmail.com"
                    },
                    "store": {
                      "id": 64,
                      "username": "mystore",
                      "name": "Digital Store 1",
                      "photos": "01HCRQKDH9WVZY64GKT9QS6B2A.jpeg",
                      "description": "Adalah sebuah toko digital murah terpecaya",
                      "updatedAt": "2023-11-01T14:09:43.908Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "Username store already taken"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "Record to update not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/stores/{username}": {
      "get": {
        "summary": "Detail Store",
        "description": "Get detail information user store",
        "tags": ["Stores"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "example": "my-first.store"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": {
                    "id": 12,
                    "username": "my-first.store",
                    "name": "My First Store",
                    "photos": "stores/01HFKNHBF2K58FBJVR4S06EB1T.jpeg",
                    "description": null,
                    "createdAt": "2021-01-19T05:08:43.498Z",
                    "updatedAt": "2021-01-19T05:08:43.498Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "record not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "Get Categories",
        "description": "Get all available categories",
        "tags": ["Categories"],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": [
                    {
                      "id": 1,
                      "name": "Elektronik",
                      "slug": "elektronik",
                      "createdAt": "2023-11-17T02:17:45.932Z",
                      "updatedAt": "2023-11-17T02:17:45.932Z"
                    },
                    {
                      "id": 3,
                      "name": "Fashion",
                      "slug": "fashion",
                      "createdAt": "2023-11-17T02:18:33.858Z",
                      "updatedAt": "2023-11-17T02:18:33.858Z"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create category",
        "description": "Create category of products",
        "tags": ["Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "required, name for category product",
                "photos": "required, photos.png"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "id": 29,
                    "name": "kucing rumahan",
                    "slug": "kucing-rumahan",
                    "photos": "kucing-rumahan.jpeg",
                    "createdAt": "2023-11-26T04:13:37.572Z",
                    "updatedAt": "2023-11-26T04:13:37.572Z",
                    "deletedAt": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "Category name already taken"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get All products",
        "description": "Get all available products",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "Get total data products, default 10",
            "required": false,
            "example": 5
          },
          {
            "name": "page",
            "in": "query",
            "description": "display current pagination of products, default 0",
            "required": false,
            "example": 2
          },
          {
            "name": "category",
            "in": "query",
            "description": "Get all product filter by category name, default all category",
            "required": false,
            "example": "fashion"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": {
                    "products": [
                      {
                        "id": 620,
                        "name": "Rustic Soft Sausages",
                        "slug": "chocolate-store-rustic-soft-sausages-1700923973101",
                        "price": 429647,
                        "image": "products/chocolate-store-rustic-soft-sausages-1700923973101-1.jpeg"
                      },
                      {
                        "id": 592,
                        "name": "Intelligent Soft Salad",
                        "slug": "clock-store-intelligent-soft-salad-1700923972439",
                        "price": 116386,
                        "image": "products/clock-store-intelligent-soft-salad-1700923972439-1.jpeg"
                      }
                    ],
                    "pages": {
                      "size": 2,
                      "total": 35,
                      "totalPages": 18
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "record data not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Product",
        "description": "Create product store",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "content": {
            "application/json": {
              "example": {
                "code": 200,
                "result": "success",
                "message": "record has been created",
                "data": {
                  "store_id": 1,
                  "category_id": 3,
                  "name": "Underwear",
                  "slug": "mystore-Underwear-1700466471189",
                  "description": "Sell angel chan underwear",
                  "price": 25000,
                  "stock": 2,
                  "images": [
                    {
                      "product_id": 158,
                      "name": "mystore-underwear-1700466471187-1.jpeg"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "id": 1,
                    "store_id": 1,
                    "category_id": 1,
                    "name": "Jam Tangan",
                    "slug": "rhino-official-jam-tangan-1700202563475",
                    "description": "Jam tangan bagus",
                    "price": 150000,
                    "stock": 329,
                    "createdAt": "2023-11-17T06:29:23.477Z",
                    "updatedAt": "2023-11-17T06:29:23.477Z",
                    "deletedAt": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": "Category doesn't exist"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{slug}": {
      "get": {
        "summary": "Get Product",
        "description": "Get details information product and their store",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "example": "incredible-frozen ball-1700398918940"
          }
        ],
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": {
                    "name": "Incredible Frozen Ball",
                    "slug": "incredible-frozen ball-1700398918940",
                    "description": "Canonicus corroboro depraedor suscipio adipiscor. Veritatis depromo creta deprimo summisse spes auditor claustrum attonbitus antiquus. Reiciendis apostolus valens.\nItaque vulnus certus creator usitas decretum explicabo. Amicitia rerum suasoria verto audentia demens basium. Vociferor claudeo comptus esse cribro.\nAro culpo talis comedo architecto acsi. Volutabrum textus vinculum cruentus apto placeat cernuus tantillus collum. Voco clam valde condico carpo asperiores accusator depopulo.",
                    "price": 407679,
                    "stock": 116,
                    "createdAt": "2023-03-08T13:56:38.103Z",
                    "updatedAt": "2023-11-18T19:06:00.400Z",
                    "store": {
                      "username": "Bakiono.Jakubowski",
                      "name": "Fa Torphy",
                      "photo": null,
                      "createdAt": "2020-01-16T12:50:09.952Z",
                      "updatedAt": "2020-01-16T12:50:09.952Z"
                    },
                    "images": [
                      {
                        "name": "fa-torphy-incredible-frozen-ball-1700398918941-1.jpeg"
                      },
                      {
                        "name": "fa-torphy-incredible-frozen-ball-1700398918941-2.jpeg"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "record not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "summary": "Get carts",
        "description": "Get user products carts",
        "tags": ["Carts"],
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "Get total data products carts, default 5",
            "required": false,
            "example": 5
          },
          {
            "name": "page",
            "in": "query",
            "description": "display current pagination of carts, default 0",
            "required": false,
            "example": 2
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": {
                    "carts": [
                      {
                        "store": {
                          "id": 16,
                          "name": "PD Spencer",
                          "username": "Yance4",
                          "photo": "stores/01HFKNH87YFJHVGTHQ1D4D12SQ.jpeg"
                        },
                        "product": {
                          "id": 586,
                          "slug": "pd-spencer-fantastic-wooden-fish-1700923972301",
                          "name": "Fantastic Wooden Fish",
                          "price": 102551,
                          "quantity": 20
                        }
                      },
                      {
                        "store": {
                          "id": 20,
                          "name": "Fa Torphy",
                          "username": "Bakiono.Jakubowski",
                          "photo": null
                        },
                        "product": {
                          "id": 599,
                          "slug": "fa-torphy-licensed-rubber-chicken-1700923972596",
                          "name": "Licensed Rubber Chicken",
                          "price": 237742,
                          "quantity": 20
                        }
                      },
                      {
                        "store": {
                          "id": 16,
                          "name": "PD Spencer",
                          "username": "Yance4",
                          "photo": "stores/01HFKNH87YFJHVGTHQ1D4D12SQ.jpeg"
                        },
                        "product": {
                          "id": 586,
                          "slug": "pd-spencer-fantastic-wooden-fish-1700923972301",
                          "name": "Fantastic Wooden Fish",
                          "price": 102551,
                          "quantity": 20
                        }
                      }
                    ],
                    "pages": {
                      "size": 3,
                      "total": 4,
                      "totalPages": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "data not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Cart",
        "description": "Create Product Cart User",
        "tags": ["Carts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "product_id": 12,
                "quantity": 3
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "id": "fee5d5d9-04ca-4794-a649-db5bc5d5b4ca",
                    "user_id": "01HFBXQ2EGC8M3G8HB5BA5N43T",
                    "product_id": 620,
                    "quantiry": 25,
                    "createdAt": "2023-11-29T12:57:01.979Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": {
                    "product_id": "\"product_id\" is required"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "invalid token or token already expired"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "Product doesn't exist"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "summary": "Create rating",
        "description": "User create rating product",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Example form request body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "product_id": 321,
                "rating": 5,
                "comment": "Good product",
                "photos": "optional, photos.png ( can send multiple images )"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "record has been created",
                  "data": {
                    "rating": 3,
                    "comment": "Good product",
                    "images": [
                      {
                        "name": "ratings/579-01HFBXQ2EGC8M3G8HB5BA5N43T-1701737917005-1.jpeg"
                      },
                      {
                        "name": "ratings/579-01HFBXQ2EGC8M3G8HB5BA5N43T-1701737917006-2.jpeg"
                      }
                    ],
                    "product": {
                      "id": 579,
                      "name": "Gorgeous Plastic Gloves"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": 400,
                  "result": "bad request",
                  "message": {
                    "rating": "\"rating\" is required"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "result": "unauthorized",
                  "message": "token does not provided"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "example": {
                  "code": 403,
                  "result": "forbidden",
                  "message": "You have already submit rating before"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    },
    "/ratings/{productSlug}": {
      "get": {
        "summary": "Get ratings",
        "description": "Get all product ratings by product slug",
        "tags": ["Ratings"],
        "parameters": [
          {
            "name": "productSlug",
            "in": "path",
            "description": "Get product ratings by product slug",
            "required": true,
            "example": "my-store-school-bag"
          },
          {
            "name": "take",
            "in": "query",
            "description": "Get total data products, default 10",
            "required": false,
            "example": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Get current pagionation, default 1",
            "required": false,
            "example": 2
          },
          {
            "name": "rating",
            "in": "query",
            "description": "Filter by rating number, default all",
            "required": false,
            "example": "5"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Filter rating by accending or descending, default desc",
            "required": false,
            "example": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "result": "success",
                  "message": "success get record data",
                  "data": {
                    "comment": [
                      {
                        "user": "Bahuwarna.Moen44",
                        "rating": 2,
                        "comment": "Iure turba subito thesaurus conspergo. Trado adulatio cerno succedo solutio soluta valde tergeo concido. Sodalitas cogito conspergo aliquam earum amissio.\nVidelicet harum voluptatem tergiversatio temeritas. Adnuo pectus virga aeger delicate. Ad coadunatio adsum antea cupiditate tepidus cognomen.\nArbustum occaecati triduana perferendis arma confugo arbustum pariatur bis summa. Doloremque causa sulum accusantium comis spargo angelus sufficio suadeo. Vel quo adulescens charisma absque sufficio.",
                        "images": [
                          {
                            "name": "ratings/608-01HFKNH7VGS34ZEZ20NKEMP2BK-1701777037933-1.jpeg"
                          },
                          {
                            "name": "ratings/608-01HFKNH7VGS34ZEZ20NKEMP2BK-1701777037933-2.jpeg"
                          }
                        ],
                        "createdAt": "2023-12-05T11:50:37.935Z"
                      },
                      {
                        "user": "Maria.Mraz31",
                        "rating": 4,
                        "comment": "Similique qui voro abbas somnus spoliatio similique beatus tandem. Tum cupio congregatio thorax bardus decimus somnus. Perferendis cuppedia totam vobis aperiam crinis ex illum tergo vomica.\nTam patria autus pariatur amor. Vicissitudo alii aestus confugo viscus coniecto coaegresco. Caelestis auxilium cursus clibanus vulgaris sufficio vulgo cibus super advenio.\nUllus harum arbor teneo deinde. Cariosus demoror usus velit carpo suffragium voluptates. Decretum acceptus occaecati curo abscido deprimo.",
                        "images": [
                          {
                            "name": "ratings/608-01HFKNH9GEG0JR9NVH1SVAY12T-1701777032619-1.jpeg"
                          },
                          {
                            "name": "ratings/608-01HFKNH9GEG0JR9NVH1SVAY12T-1701777032619-2.jpeg"
                          }
                        ],
                        "createdAt": "2023-12-05T11:50:32.624Z"
                      },
                      {
                        "user": "Vega_Becker",
                        "rating": 5,
                        "comment": "Virgo demergo verus repellendus vestrum arbor dolorem decipio volubilis. Amplitudo volutabrum concido deleo crustulum vomito abeo acsi aspernatur. Cunabula centum minus stipes.\nDemum iusto voluptatem depopulo quam taedium amicitia aeneus sto. Caste cavus terra aetas solutio cupiditate spoliatio clamo expedita ventito. Reiciendis veritatis ratione.\nExercitationem est constans audentia suppellex spoliatio arma clarus sed adinventitias. Cohibeo comparo angulus ea optio debilito caritas consuasor decerno cribro. Urbs unus architecto tunc annus vere subito.",
                        "images": [
                          {
                            "name": "ratings/608-01HFKNH9PJ880WYN7SV5S7KVN5-1701777023946-1.jpeg"
                          },
                          {
                            "name": "ratings/608-01HFKNH9PJ880WYN7SV5S7KVN5-1701777023946-2.jpeg"
                          }
                        ],
                        "createdAt": "2023-12-05T11:50:23.948Z"
                      },
                      {
                        "user": "Koko.Bernier54",
                        "rating": 1,
                        "comment": "Cursim iste casus. Solus demens cupressus umquam desipio claustrum ara. Tersus urbanus cultura thesis accusamus cena.\nSuccedo sponte totam. Vomer vulgus textilis auxilium delinquo umquam. Ambulo tabernus callide cena assentator demo dedecor.\nVicinus circumvenio curriculum cauda. Eligendi vox capillus. Charisma inflammatio vita.",
                        "images": [
                          {
                            "name": "ratings/608-01HFKNHA0DXVXFW0531EJEKFA4-1701777013748-1.jpeg"
                          },
                          {
                            "name": "ratings/608-01HFKNHA0DXVXFW0531EJEKFA4-1701777013748-2.jpeg"
                          }
                        ],
                        "createdAt": "2023-12-05T11:50:13.749Z"
                      }
                    ],
                    "ratings": {
                      "starsOne": 2,
                      "starsTwo": 1,
                      "starsThree": 1,
                      "starsFour": 2,
                      "starsFive": 1
                    },
                    "page": {
                      "size": 4,
                      "total": 7,
                      "totalPages": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "code": 404,
                  "result": "not found",
                  "message": "record data not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": 500,
                  "result": "internal server error",
                  "message": "some message server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}